[input.scanner]
    serial="<Serial Number>"
    connection_point=["*"]
    platform = "*"

[[variable]]
    name="location"
    type="static"
    value="<Location Name Here>"

[[variable]]
    name="barcode"
    type="single"
    # Horribly complicated regex that will match any barcode but exclude leading and trailing whitespace while still allowing whitespace in the middle
    pattern='\s*(.*(?<=[\S]))\s*'

[processing]
    directory="plugins"
[processing.process.get_id]
    apply_to = "barcode"
    module="id_for_barcode"
    output_as=["id"]
    extra_args={endpoint = "identity-sds.docker.local", type="barcode"}

[[output]]
    name = "scan event"   # only used in logging
    topic = "transfer_operation/{{location}}"
    triggers = ["id"]
    trigger_policy="all"
    #payload.<key>="<variable>"
    payload.item="id"
    payload.to_loc="location"
    payload.timestamp="timestamp"


[service_layer.mqtt]
    broker="mqtt.docker.local"
    port=1883
    base_topic_template = ""

    #reconnection characteristics
    # start: timeout = initial,
    # if timeout < limit then
    #   timeout = timeout*backoff
    # else
    #   timeout = limit
    reconnect.initial = 5 # seconds
    reconnect.backoff = 2 # multiplier
    reconnect.limit = 60 # seconds
